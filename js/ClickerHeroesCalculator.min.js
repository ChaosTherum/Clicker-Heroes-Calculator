function loadLocalStorage(){"undefined"!=typeof Storage&&null!=localStorage.getItem("save")&&(userSave=JSON.parse(localStorage.getItem("save")))}function preInit(){loadLocalStorage()}function logBase(e,a){return Math.log(a)/Math.log(e)}function calculateBaseDPS(e,a){return Math.ceil(e/10*Math.pow(1-.0188*Math.min(a,14),a))}function calculateUpgradeCost(e,a){return heroData[a-1].baseCost*[10,25,100,800,8e3,4e4,4e5][[10,25,50,75,100,125,150].indexOf(e)]}function calculateLevelUpCost(e,a){return Math.floor(1==heroData[e].id&&15>=a?(5+a)*Math.pow(1.07,a)*(1-.02*ancientData[8].level):1==heroData[e].id?20*Math.pow(1.07,a)*(1-.02*ancientData[8].level):heroData[e].baseCost*Math.pow(1.07,a)*(1-.02*ancientData[8].level))}function calculateCostUpToLevel(e,a,r){for(var o=0,i=a;r>i;i++)o+=calculateLevelUpCost(e,i);return o}function splitParams(e){return e.split(" ").join("").split(",")}function populateArrays(){for(var e=0;e<heroKeys.length;e++){heroData[e]=[];var a=impHer[heroKeys[e]];heroData[e].name=a.name,heroData[e].baseCost=a.baseCost,heroData[e].id=a.id,heroData[e].baseDPS=1!=heroData[e].id?calculateBaseDPS(heroData[e].baseCost,heroData[e].id):0,heroData[e].baseClickDamage=a.baseClickDamage,heroData[e].level=0,heroData[e].gilded=0,heroData[e].currentDPS=0,heroData[e].nextCost=0,heroData[e].nextDPSChange=0,heroData[e].efficiency1=0,heroData[e].efficiency4x=0,heroData[e].efficiency10x=0,heroData[e].levelMultiplier=1,heroData[e].upgradeMultiplier=1,heroData[e].currentClickDamge=0,heroData[e].upgrades=[]}for(var e=0;e<upgradeKeys.length;e++){upgradeData[e]=[];var r=impUpg[upgradeKeys[e]];upgradeData[e].id=r.id,upgradeData[e].heroID=r.heroId,upgradeData[e].name=r.name,upgradeData[e].level=r.heroLevelRequired,upgradeData[e].type=r.upgradeFunction,upgradeData[e].upgradeParams=splitParams(r.upgradeParams),upgradeData[e].cost=calculateUpgradeCost(upgradeData[e].level,upgradeData[e].heroID),heroData[upgradeData[e].heroID-1].upgrades.push(e),upgradeData[e].owned=!1,upgradeData[e].totalCost=0,upgradeData[e].DPSChange=0,upgradeData[e].efficiency=0}for(var e=0;e<achievKeys.length;e++){achievData[e]=[];var o=impAch[achievKeys[e]];achievData[e].name=o.name,achievData[e].id=o.id,achievData[e].type=o.rewardFunction,achievData[e].rewardParams=splitParams(o.rewardParams),achievData[e].checkFunction=o.checkFunction,achievData[e].checkParams=o.checkParams,achievData[e].description=o.description,achievData[e].owned=!1,achievData[e].DPSChange=0,achievData[e].efficiency=0}for(var e=0;e<ancientKeys.length;e++){ancientData[e]=[];var i=impAnc[ancientKeys[e]];ancientData[e].name=i.name,ancientData[e].id=i.id,ancientData[e].maxLevel=i.maxLevel,ancientData[e].levelCostFormula=i.levelCostFormula,ancientData[e].levelAmountFormula=i.levelAmountFormula,ancientData[e].level=0,ancientData[e].nextCost=0,ancientData[e].DPSChange=0}}function fillInData(){if(0!=Object.keys(userSave).length){for(var e=0;e<heroKeys.length;e++)heroData[e].level=userSave.heroes[e][0],heroData[e].gilded=userSave.heroes[e][1];for(var e=0;e<achievKeys.length;e++)achievData[e].owned=userSave.achievements[e];for(var e=0;e<upgradeKeys.length;e++)upgradeData[e].owned=userSave.upgrades[e];for(var e=0;e<ancientKeys.length;e++)ancientData[e].level=userSave.ancients[e];heroSouls=userSave.heroSouls,allDPSMultiplier=userSave.allDPSMultiplier,highestZoneReached=userSave.highestZone,currentHighestZone=userSave.currentHighestZone,currentZone=userSave.currentZone,document.getElementById("currentZone").value=currentZone}}function costToDesiredHeroSouls(){if(enableHeroSouls){var e=1,a=0,r=0,o=0,i=0;for(heroSoulsLevels=[],t=0;26>t;t++)e*=heroData[t].baseCost,heroSoulsLevels[t]=heroData[t].level,a+=heroData[t].level;2e3*desiredHeroSouls>a&&(i=2e3*desiredHeroSouls-a);for(var t=0;i>t;t++){for(var n=[],s=0;26>s;s++)n[s]=calculateLevelUpCost(s,heroSoulsLevels[s]);r=n.indexOf(Math.min.apply(Math,n)),heroSoulsLevels[r]+=1}for(var t=0;26>t;t++)o+=calculateCostUpToLevel(t,heroData[t].level,heroSoulsLevels[t]);requiredGPS=o/300}}function calculateDarkRitualInfo(){if(0!=allDPSMultiplier){for(var e=allDPSMultiplier/(allHeroMultiplier*achievementMultiplier),a=Math.floor(logBase(1.05,e)),r=Math.floor(logBase(1.1,e)),o=[0,0,1,e],i=0;a>=i;i++)for(var t=0;r>=t;t++){var n=Math.pow(1.05,i)*Math.pow(1.1,t);Math.abs(n-e)<o[3]&&(o=[i,t,n,Math.abs(n-e)])}darkRitualsUsed=o[0],energizedDarkRitualsUsed=o[1],darkRitualMultiplier=Math.pow(1.05,darkRitualsUsed)*Math.pow(1.1,energizedDarkRitualsUsed)}else darkRitualsUsed=0,energizedDarkRitualsUsed=0,darkRitualMultiplier=1;darkRitualsCalculated=!0}function calculateGlobalMultipliers(){darkRitualsCalculated=!1,darkRitualsUsed=0,energizedDarkRitualsUsed=0,achievementMultiplier=1;for(var e=0;e<achievKeys.length;e++)"addDps"==achievData[e].type&&1==achievData[e].owned&&(achievementMultiplier*=1+Number(achievData[e].rewardParams[0])/100);allHeroMultiplier=1,goldMultiplier=1;for(var e=0;e<upgradeKeys.length;e++)"upgradeEveryonePercent"==upgradeData[e].type&&1==upgradeData[e].owned?allHeroMultiplier*=1+Number(upgradeData[e].upgradeParams[0])/100:"upgradeGoldFoundPercent"==upgradeData[e].type&&1==upgradeData[e].owned&&(goldMultiplier*=1+Number(upgradeData[e].upgradeParams[0])/100);heroSoulsMultiplier=1+heroSouls/10+.11*ancientData[13].level,darkRitualMultiplier=Math.pow(1.05,darkRitualsUsed)*Math.pow(1.1,energizedDarkRitualsUsed)}function calculateNextDPSChange(e,a){return(a+1)%1e3==0?(9*a+10)*(heroData[e].currentDPS/a):(a+1)%25==0&&a>=199?(3*a+4)*(heroData[e].currentDPS/a):0!=a?heroData[e].currentDPS/a:heroData[e].baseDPS}function calculateHeroData(){for(var e=0;e<heroKeys.length;e++){if(heroData[e].level>=200&&1!=heroData[e].id&&heroData[e].level<4e3){var a=0,r=Math.floor(1+(heroData[e].level-200)/25);heroData[e].level>=1e3&&(a=Math.floor(heroData[e].level/1e3)),heroData[e].levelMultiplier=Math.pow(4,r-a)*Math.pow(10,a)}else if(heroData[e].level>=200&&1!=heroData[e].id&&heroData[e].level<4100){var r=Math.ceil((4100-heroData[e].level)/25);heroData[e].levelMultiplier=Math.pow(10,3)*Math.pow(4,140+r)}else heroData[e].levelMultiplier=heroData[e].level>=200?Math.pow(10,3)*Math.pow(4,144):1;heroData[e].nextCost=calculateLevelUpCost(e,heroData[e].level)}for(var o=!0;o;){heroDPS=0;for(var e=0;e<heroKeys.length;e++){heroData[e].currentDPS=heroData[e].level*heroData[e].baseDPS*achievementMultiplier*darkRitualMultiplier*allHeroMultiplier*heroSoulsMultiplier*heroData[e].levelMultiplier*(1+heroData[e].gilded*(.5+.02*ancientData[25].level));for(var i=0;i<heroData[e].upgrades.length;i++){var t=upgradeData[heroData[e].upgrades[i]];"upgradeHeroPercent"==t.type&&1==t.owned&&(heroData[e].currentDPS=heroData[e].currentDPS*(1+t.upgradeParams[1]/100))}heroDPS+=heroData[e].currentDPS}0==darkRitualsCalculated?calculateDarkRitualInfo():o=!1}for(var e=0;e<heroKeys.length;e++)heroData[e].nextDPSChange=calculateNextDPSChange(e,heroData[e].level)}function calculateClickingInfo(){for(var e=1,a=0;a<upgradeKeys.length;a++){var r=upgradeData[a];"upgradeClickPercent"==r.type&&1==r.owned&&(e*=1+Number(r.upgradeParams[0])/100)}heroData[0].currentClickDamage=heroData[0].baseClickDamage*heroData[0].level*e*achievementMultiplier*allHeroMultiplier*darkRitualMultiplier*heroSoulsMultiplier,upgradeClickMultiplier=0;for(var a=0;a<upgradeKeys.length;a++){var o=upgradeData[a];"upgradeClickDpsPercent"==o.type&&1==o.owned&&(upgradeClickMultiplier+=Number(o.upgradeParams[0]))}upgradeClickDPS=heroDPS*(upgradeClickMultiplier/100);for(var i=1,a=0;a<achievKeys.length;a++){var t=achievData[a];"addClickDamage"==t.type&&1==t.owned&&(i+=Number(t.rewardParams[0]))}clickDamage=Math.floor((Math.ceil(heroData[0].currentClickDamage)+Math.floor(upgradeClickDPS))*(1+.2*ancientData[16].level))+i;var n;n=0!=heroData[0].level?heroData[0].currentClickDamage/heroData[0].level*(.2*ancientData[16].level+1):heroData[0].baseClickDamage*e*achievementMultiplier*allHeroMultiplier*darkRitualMultiplier*heroSoulsMultiplier,0==n&&(n=(1+.2*ancientData[16].level)*heroData[0].currentClickDamage/heroData[0].level);for(var s=0,a=0;a<upgradeKeys.length;a++){var d=upgradeData[a];"upgradeCriticalChance"==d.type&&1==d.owned&&(s+=Number(d.upgradeParams[0]))}criticalClickChance=s/100;for(var l=10,a=0;a<upgradeKeys.length;a++){var u=upgradeData[a];"upgradeCriticalDamage"==u.type&&1==u.owned&&(l+=Number(u.upgradeParams[0]))}criticalClickMultiplier=l,criticalClickDamage=clickDamage*(criticalClickChance*(criticalClickMultiplier-1)+1);var c=criticalClickDamage*n/clickDamage;clickDPS=clickDamage*clickSpeed*enableClicking;var m=clickSpeed*n*enableClicking;criticalClickDPS=criticalClickDamage*clickSpeed*enableClicking;var p=c*clickSpeed*enableClicking;1==enableClicking?1==enableCritical?(0==criticalClickDPS&&(criticalClickDPS=1),totalDPS=criticalClickDPS+heroDPS,heroData[0].nextDPSChange=p):(0==clickDPS&&(clickDPS=1),totalDPS=clickDPS+heroDPS,heroData[0].nextDPSChange=m):(0==heroDPS&&(heroDPS=1),totalDPS=heroDPS,heroData[0].nextDPSChange=0)}function calculateDPStoGoldRatio(e){var a=Math.ceil(10*(Math.pow(1.6,Math.min(140,e)-1)+Math.min(140,e)-1)*Math.pow(1.15,Math.max(140,e)-140)),r=0;if(e%5==0)a=Math.ceil(10*(1-.02*ancientData[15].level)*(Math.pow(1.6,Math.min(140,e)-1)+Math.min(140,e)-1)*Math.pow(1.15,Math.max(140,e)-140)*10),r=Math.ceil(a/15*goldMultiplier*Math.min(3,Math.pow(1.025,Math.max(0,e-75)))*(1+.05*ancientData[5].level)*(1+.225*ancientData[9].level));else{var o=Math.ceil(a/15*goldMultiplier*Math.min(3,Math.pow(1.025,Math.max(0,e-75)))*(1+.05*ancientData[5].level)),i=10*o*(1+.5*ancientData[6].level),t=.01*(1+.2*ancientData[11].level);r=(t*i+(1-t)*o)*(1+.225*ancientData[9].level)}var n=a/totalDPS+.5;return totalGPS=r/n,totalGPS/totalDPS}function calculateEfficiency(e,a){return 0!=a?1==efficiencyType?1.15*(e/totalDPS)+e/a:2==efficiencyType?e/a:3==efficiencyType?a>totalDPS*effMult?e/a:1/0:a>totalDPS*effMult?1.15*(e/totalDPS)+e/a:1/0:1/0}function compareSecondColumn(e,a){return e[1]===a[1]?0:e[1]<a[1]?-1:1}function updateEfficiencyData(){efficiencyData.length=0;for(var e=1;e<heroKeys.length;e++)efficiencyData.push(["Hero",heroData[e].efficiency1,1,e,0]),1/0!=heroData[e].efficiency4x&&efficiencyData.push(["Hero",heroData[e].efficiency4x,4,e,0]),1/0!=heroData[e].efficiency10x&&efficiencyData.push(["Hero",heroData[e].efficiency10x,10,e,0]);0!=heroData[0].efficiency1&&1/0!=heroData[0].efficiency1&&efficiencyData.push(["Hero",heroData[0].efficiency1,1,0,0]);for(var e=0;e<upgradeKeys.length;e++)0==upgradeData[e].owned&&efficiencyData.push(["Upgrade",upgradeData[e].efficiency,1,e,1]);efficiencyData.sort(compareSecondColumn)}function calculateUpgradeTotalCost(e,a){var r=heroData[e],o=upgradeData[a];return calculateCostUpToLevel(e,r.level,o.level)+o.cost}function DPSGainedHero(e,a){var r=heroData[e],o=r.currentDPS;return 0!=r.level&&r.level<a?o*(a/r.level-1):r.level<a?a*r.baseDPS*achievementMultiplier*darkRitualMultiplier*allHeroMultiplier*heroSoulsMultiplier*(1+r.gilded*(.5+.02*ancientData[25].level)):0}function calculateAllEfficiencies(){calculateDPStoGoldRatio(currentZone);var e=!0;for(effMult=.005;e;){for(var a=1;a<heroKeys.length;a++){var r=0,o=0,i=0,t=0;if(heroData[a].efficiency1=calculateEfficiency(heroData[a].nextCost,heroData[a].nextDPSChange),heroData[a].level<200&&0!=heroData[a].level)r=calculateCostUpToLevel(a,heroData[a].level,200),o=4*heroData[a].currentDPS*(200/heroData[a].level)-heroData[a].currentDPS,i=calculateCostUpToLevel(a,heroData[a].level,1e3),t=10*Math.pow(4,32)*heroData[a].currentDPS*(1e3/heroData[a].level)-heroData[a].currentDPS;else if(0!=heroData[a].level&&heroData[a].level<4100){var n=25*Math.ceil((heroData[a].level+1)/25);r=calculateCostUpToLevel(a,heroData[a].level,n);var s=0;if(n%1e3==0&&3e3>=n&&(n+=25,r=calculateCostUpToLevel(a,heroData[a].level,n),s=1),o=4*Math.pow(10,s)*heroData[a].currentDPS*(n/heroData[a].level)-heroData[a].currentDPS,heroData[a].level<3e3){var d=1e3*Math.ceil((heroData[a].level+1)/1e3);i=calculateCostUpToLevel(a,heroData[a].level,d);var l=Math.floor((d-(heroData[a].level+1))/25);t=10*Math.pow(4,l)*heroData[a].currentDPS*(d/heroData[a].level)-heroData[a].currentDPS}}else heroData[a].level<4100&&(r=calculateCostUpToLevel(a,0,200),i=calculateCostUpToLevel(a,0,1e3),o=200*heroData[a].baseDPS*achievementMultiplier*darkRitualMultiplier*allHeroMultiplier*heroSoulsMultiplier*4*(1+heroData[a].gilded*(.5+.02*ancientData[25].level)),t=1e3*heroData[a].baseDPS*achievementMultiplier*darkRitualMultiplier*allHeroMultiplier*heroSoulsMultiplier*10*Math.pow(4,32)*(1+heroData[a].gilded*(.5+.02*ancientData[25].level)));heroData[a].efficiency4x=calculateEfficiency(r,o),heroData[a].efficiency10x=calculateEfficiency(i,t)}heroData[0].efficiency1=calculateEfficiency(heroData[0].nextCost,heroData[0].nextDPSChange);for(var a=0;a<upgradeKeys.length;a++)if(0==upgradeData[a].owned){upgradeData[a].totalCost=calculateUpgradeTotalCost(upgradeData[a].heroID-1,a);var u=heroData[upgradeData[a].heroID-1],c=DPSGainedHero(upgradeData[a].heroID-1,upgradeData[a].level);switch(upgradeData[a].type){case"upgradeClickPercent":var m;m=heroData[0].level<upgradeData[a].level&&0!=heroData[0].level?heroData[0].currentClickDamage*(upgradeData[a].level/heroData[0].level*(1+Number(upgradeData[a].upgradeParams[0])/100)-1):heroData[0].level<upgradeData[a].level?upgradeData[a].level*achievementMultiplier*allHeroMultiplier*darkRitualMultiplier*heroSoulsMultiplier*(1+Number(upgradeData[a].upgradeParams[0])/100):heroData[0].currentClickDamage*Number(upgradeData[a].upgradeParams[0])/100,upgradeData[a].DPSChange=.2*(ancientData[16].level+5)*m*clickSpeed*enableClicking,enableCritical&&enableClicking&&(upgradeData[a].DPSChange=upgradeData[a].DPSChange*criticalClickDamage/clickDamage);break;case"upgradeHeroPercent":var p=.01*Number(upgradeData[a].upgradeParams[1])*(u.currentDPS+c)+c;upgradeData[a].DPSChange=p;break;case"upgradeGoldFoundPercent":upgradeData[a].DPSChange=.01*Number(upgradeData[a].upgradeParams[0])*(totalDPS+c)+c;case"upgradeEveryonePercent":var p=.01*Number(upgradeData[a].upgradeParams[0])*(heroDPS+c)+c;upgradeData[a].DPSChange=p;break;case"upgradeCriticalChance":upgradeData[a].DPSChange=enableClicking*enableCritical*.01*clickSpeed*(criticalClickMultiplier-1)*clickDamage*Number(upgradeData[a].upgradeParams[0]);break;case"upgradeCriticalDamage":upgradeData[a].DPSChange=enableClicking*enableCritical*clickSpeed*criticalClickChance*clickDamage*Number(upgradeData[a].upgradeParams[0]);break;case"upgradeClickDpsPercent":var h=.01*heroDPS*Number(upgradeData[a].upgradeParams[0])*(1+.2*ancientData[16].level),f=h*criticalClickDamage/clickDamage;upgradeData[a].DPSChange=enableClicking*(!enableCritical*h*clickSpeed+enableCritical*f*clickSpeed);break;case"upgradeGetSkill":case"finalUpgrade":default:upgradeData[a].DPSChange=0}upgradeData[a].efficiency=calculateEfficiency(upgradeData[a].totalCost,upgradeData[a].DPSChange)}else upgradeData[a].efficiency="N/A";updateEfficiencyData(),1/0==efficiencyData[1][1]?(console.log(effMult),effMult=.005*effMult):e=!1}}function nextMultiplierLevel(e,a){switch(a){case 1:return e+1;case 4:return 200>e?200:25*Math.ceil((e+1)/25);case 10:return 1e3*Math.ceil((e+1)/1e3);default:window.alert("Invalid Multiplier"+a.toString())}}function tempPurchase(){var e=efficiencyData[0];"Hero"==e[0]?heroData[e[3]].level=e[4]:"Upgrade"==e[0]?(upgradeData[e[3]].owned=!0,heroData[upgradeData[e[3]].heroID-1].level<upgradeData[e[3]].level&&(heroData[upgradeData[e[3]].heroID-1].level=upgradeData[e[3]].level)):window.alert("Invalid Efficiency Type"+e[0].toString())}function findNext20Purchases(){var o,e=jQuery.extend(!0,{},heroData),a=jQuery.extend(!0,{},upgradeData),r=[0,0,0,0,0];for(next20Purchases=[];next20Purchases.length<20;)o=efficiencyData[0],0==r[0]||r[0]==o[0]&&r[3]==o[3]||next20Purchases.push(r),"Hero"==o[0]&&(o[4]=nextMultiplierLevel(heroData[o[3]].level,o[2])),tempPurchase(),calculateGlobalMultipliers(),calculateHeroData(),calculateClickingInfo(),calculateAllEfficiencies(),updateEfficiencyData(),r=o;heroData=e,upgradeData=a,calculateGlobalMultipliers(),calculateHeroData(),calculateClickingInfo(),calculateAllEfficiencies(),updateEfficiencyData()}function recalculate(){calculateGlobalMultipliers(),calculateHeroData(),calculateClickingInfo(),calculateAllEfficiencies(),updateEfficiencyData(),costToDesiredHeroSouls(),findNext20Purchases()}function init(){populateArrays(),fillInData(),recalculate()}function decodeSave(){var e="",a="Fe12NAfA3R6z4k0z";if(-1!=saveData.search(a)){for(var r=saveData.split(a)[0],o=0;o<r.length;o++)o%2==0&&(e+=r[o]);"object"==typeof JSON.parse(atob(e))?parsedSaveData=JSON.parse(atob(e)):(window.alert("Invalid Save File (Was not an Object), please create the save again"),parsedSaveData={})}else window.alert("Invalid Save File (Anti-Cheat String not Found)"),parsedSaveData={}}function updateUserSave(){if(parsedSaveData!={}){userSave.heroes=[];for(var e=0;e<heroKeys.length;e++){var a=Number(heroData[e].id);userSave.heroes[e]=[parsedSaveData.heroCollection.heroes[a].level,parsedSaveData.heroCollection.heroes[a].epicLevel]}userSave.achievements=[];for(var r=Object.keys(parsedSaveData.achievements),e=0;e<achievKeys.length;e++){var o=Number(achievData[e].id);userSave.achievements[e]=r.indexOf(o.toString())>-1}userSave.upgrades=[];for(var r=Object.keys(parsedSaveData.upgrades),e=0;e<upgradeKeys.length;e++){var i=Number(upgradeData[e].id);userSave.upgrades[e]=r.indexOf(i.toString())>-1}userSave.ancients=[];for(var r=Object.keys(parsedSaveData.ancients.ancients),e=0;e<ancientKeys.length;e++){var t=Number(ancientData[e].id);userSave.ancients[e]=r.indexOf(t.toString())>-1?parsedSaveData.ancients.ancients[t].level:0}userSave.heroSouls=parsedSaveData.heroSouls,userSave.allDPSMultiplier=parsedSaveData.allDpsMultiplier,userSave.highestZone=parsedSaveData.highestFinishedZonePersist,userSave.currentHighestZone=parsedSaveData.highestFinishedZone,userSave.currentZone=parsedSaveData.currentZoneHeight}}function getOptions(){enableClicking=document.getElementById("enableClicking").checked,enableCritical=document.getElementById("enableCritical").checked,clickSpeed=document.getElementById("clickSpeed").value,isNaN(clickSpeed)||0>clickSpeed?(clickSpeed=0,document.getElementById("clickSpeed").value=0):clickSpeed>40?(clickSpeed=40,document.getElementById("clickSpeed").value=40):clickSpeed=Number(clickSpeed),currentZone=document.getElementById("currentZone").value,currentZone=isNaN(currentZone)||Number(currentZone)<=0?1:Number(currentZone),document.getElementById("enableHeroSouls").checked&&document.getElementById("enableHeroSouls").checked!=enableHeroSouls&&(openedHeroSoulsPopup=!1),enableHeroSouls=document.getElementById("enableHeroSouls").checked,desiredHeroSouls=document.getElementById("desiredHeroSouls").value,isNaN(desiredHeroSouls)||0>desiredHeroSouls?(desiredHeroSouls=0,document.getElementById("desiredHeroSouls").value=0):desiredHeroSouls>25?(desiredHeroSouls=25,document.getElementById("desiredHeroSouls").value=25):desiredHeroSouls=Number(desiredHeroSouls)}function updateAll(){saveData=document.getElementById("savedata").value.toString(),""!=saveData&&(decodeSave(),updateUserSave(),fillInData()),getOptions(),recalculate(),updateDOM()}function updateValues(){getOptions(),recalculate(),updateDOM()}function numberWithCommas(e){var a=e.toString().split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),a.join(".")}function formatNumber(e){if(scientificNotation)return e.toPrecision(4);if(!e)return"0";if(e>-1&&1>e)return e.toPrecision(4);var a=["K","M","B","T","q","Q","s","S","O","N","d","U","D","!","@","#","$","%","^","&","*"],r=e,o=e/Math.abs(e);e=Math.abs(e);for(var i=e.toExponential().split("e+"),t=+i[1],n=0;t>=5;)t-=3,n++;var s=o*i[0]*Math.pow(10,t),d=numberWithCommas(Math.floor(s));return n>a.length?r.toPrecision(4):(n&&(d+=a[n-1]),d)}function saveSaveData(){userSave.heroes=[];for(var e=0;e<heroKeys.length;e++){{Number(heroData[e].id)}userSave.heroes[e]=[heroData[e].level,heroData[e].gilded]}userSave.achievements=[];for(var e=0;e<achievKeys.length;e++)userSave.achievements[e]=achievData[e].owned;userSave.upgrades=[];for(var e=0;e<upgradeKeys.length;e++)userSave.upgrades[e]=upgradeData[e].owned;userSave.ancients=[];for(var e=0;e<ancientKeys.length;e++)userSave.ancients[e]=ancientData[e].level;userSave.heroSouls=heroSouls,userSave.allDPSMultiplier=allDPSMultiplier,userSave.highestZone=highestZoneReached,userSave.currentHighestZone=currentHighestZone,userSave.currentZone=currentZone,"undefined"!=typeof Storage&&0!=Object.keys(userSave).length&&localStorage.setItem("save",JSON.stringify(userSave))}function updateEfficiencyTable(){var e=document.getElementById("efficiencyTableOut");if(0==e.rows.length){var a=e.insertRow(0);a.insertCell(0).appendChild(document.createTextNode("Name")),a.insertCell(1).appendChild(document.createTextNode("Level")),a.insertCell(2).appendChild(document.createTextNode("Buy"));for(var r=0;20>r;r++){var o=e.insertRow(r+1);if("Hero"==next20Purchases[r][0])o.insertCell(0).appendChild(document.createTextNode(heroData[next20Purchases[r][3]].name)),o.insertCell(1).appendChild(document.createTextNode(next20Purchases[r][4]));else{var i=document.createElement("div");i.innerHTML=upgradeData[next20Purchases[r][3]].name+"<br/>"+heroData[Number(upgradeData[next20Purchases[r][3]].heroID)-1].name,o.insertCell(0).appendChild(i),o.insertCell(1).appendChild(document.createTextNode("N/A"))}var t=document.createElement("input");t.setAttribute("type","button"),t.setAttribute("name","buy"+r),t.setAttribute("value","Buy"),t.onclick=function(e){return function(){purchaseFromEfficiency(e)}}(r),o.insertCell(2).appendChild(t)}}else for(var r=0;20>r;r++){var n=e.rows[r+1];if("Hero"==next20Purchases[r][0])n.cells[0].innerHTML=heroData[next20Purchases[r][3]].name,n.cells[1].innerHTML=next20Purchases[r][4];else{var i=document.createElement("div");i.innerHTML=upgradeData[next20Purchases[r][3]].name+"<br/>"+heroData[Number(upgradeData[next20Purchases[r][3]].heroID)-1].name,n.cells[0].innerHTML="",n.cells[0].appendChild(i),n.cells[1].innerHTML="N/A"}}totalGPS>requiredGPS&&enableHeroSouls&&!isPopupOpen&&createPopup("Hero Souls")}function updateAchievement(e){achievData[e].owned=document.getElementById("achievementIn"+e).checked,recalculate(),updateDOM()}function updateAchievementInTable(){var e=document.getElementById("achievTableIn");if(0==e.rows.length){for(var a=0;a<Object.keys(achievData).length;a++)sortedAchievements[a]=[achievData[a].name,a];sortedAchievements.sort();for(var r=0;r<Object.keys(achievData).length;r++){var o=e.insertRow(r),i=document.createTextNode(sortedAchievements[r][0]),t=document.createElement("input");t.setAttribute("type","checkbox"),t.setAttribute("id","achievementIn"+sortedAchievements[r][1]),achievData[sortedAchievements[r][1]].owned&&t.setAttribute("checked","checked"),t.onchange=function(e){return function(){updateAchievement(sortedAchievements[e][1])}}(r),o.insertCell(0).appendChild(i),o.insertCell(1).appendChild(t)}}else for(var a=0;a<e.rows.length;a++)document.getElementById("achievementIn"+sortedAchievements[a][1]).checked=achievData[sortedAchievements[a][1]].owned}function purchaseFromEfficiency(e){var a=next20Purchases[e];"Hero"==a[0]?heroData[a[3]].level=a[4]:"Upgrade"==a[0]?(upgradeData[a[3]].owned=!0,heroData[upgradeData[a[3]].heroID-1].level<upgradeData[a[3]].level&&(heroData[upgradeData[a[3]].heroID-1].level=upgradeData[a[3]].level)):window.alert("Invalid Efficiency Type"+a[0].toString()),getOptions(),recalculate(),updateDOM()}function updateStats(){if(document.getElementById("statstotaldps").innerHTML=formatNumber(heroDPS),document.getElementById("statsclickdamage").innerHTML=formatNumber(clickDamage),1e5>totalGPS){var e=totalGPS&&Math.floor(1+Math.log(totalGPS)/Math.LN10);document.getElementById("statstotalgps").innerHTML=numberWithCommas(totalGPS.toFixed(5-e))}else document.getElementById("statstotalgps").innerHTML=formatNumber(totalGPS);document.getElementById("statsherosouls").innerHTML=heroSouls.toString(),document.getElementById("statsdarkrituals").innerHTML=darkRitualsUsed.toString(),document.getElementById("statsenergizeddarkrituals").innerHTML=energizedDarkRitualsUsed.toString();for(var a=0,r=0;r<Object.keys(achievData).length;r++)a+=achievData[Object.keys(achievData)[r]].owned;document.getElementById("statsachievementsunlocked").innerHTML=a.toString()+"/87";for(var o=0,i=0;i<Object.keys(heroData).length;i++)o+=heroData[Object.keys(heroData)[i]].level;document.getElementById("statsherolevels").innerHTML=o.toString(),document.getElementById("statsgainedherosouls").innerHTML=Math.floor(o/2e3).toString(),document.getElementById("statsachievementmultiplier").innerHTML=(+achievementMultiplier.toFixed(4)).toString(),document.getElementById("statsupgrademultiplier").innerHTML=(+allHeroMultiplier.toFixed(4)).toString(),document.getElementById("statsherosoulsmultiplier").innerHTML=(+heroSoulsMultiplier.toFixed(4)).toString(),document.getElementById("statsdarkritualmultiplier").innerHTML=(+darkRitualMultiplier.toFixed(4)).toString(),document.getElementById("statsefficiencyType").innerHTML=efficiencyType.toString()}function updateHeroDataOutTable(){var e=document.getElementById("heroTableOut");if(0==e.rows.length){var a=e.insertRow(0);a.insertCell(0).appendChild(document.createTextNode("Hero Name")),a.insertCell(1).appendChild(document.createTextNode("Level")),a.insertCell(2).appendChild(document.createTextNode("Gilds")),a.insertCell(3).appendChild(document.createTextNode("DPS"));for(var r=1;r<=heroKeys.length;r++){var o=e.insertRow(r);o.insertCell(0).appendChild(document.createTextNode(heroData[r-1].name)),o.insertCell(1).appendChild(document.createTextNode(heroData[r-1].level)),o.insertCell(2).appendChild(document.createTextNode(heroData[r-1].gilded)),o.insertCell(3).appendChild(document.createTextNode(formatNumber(heroData[r-1].currentDPS)))}}else for(var r=1;r<=heroKeys.length;r++){var i=e.rows[r];i.cells[0].innerHTML=heroData[r-1].name,i.cells[1].innerHTML=heroData[r-1].level,i.cells[2].innerHTML=heroData[r-1].gilded,i.cells[3].innerHTML=formatNumber(heroData[r-1].currentDPS)}}function createPopup(e,a){isPopupOpen=!0;var r=document.getElementById("popupdiv");if(r.innerHTML="","Hero"==e){r.style.display="block";var o=document.createElement("br"),i=document.createTextNode("Name: "+heroData[a].name),t=document.createTextNode("Level: "),n=document.createElement("input");n.setAttribute("type","number"),n.setAttribute("value",heroData[a].level),n.setAttribute("id","heroLevelInput");var s=document.createTextNode("Gilds: "),d=document.createElement("input");d.setAttribute("type","number"),d.setAttribute("value",heroData[a].gilded),d.setAttribute("id","heroGildInput");for(var l=document.createTextNode("Upgrades: "),u=[],c=[],m=0;m<heroData[a].upgrades.length;m++)u[m]=document.createTextNode(upgradeData[heroData[a].upgrades[m]].name),c[m]=document.createElement("input"),c[m].setAttribute("type","checkbox"),upgradeData[heroData[a].upgrades[m]].owned&&c[m].setAttribute("checked","checked"),c[m].setAttribute("id","upgradeInput"+m);r.appendChild(i),r.appendChild(o.cloneNode(!0)),r.appendChild(t),r.appendChild(n),r.appendChild(o.cloneNode(!0)),r.appendChild(s),r.appendChild(d),r.appendChild(o.cloneNode(!0)),r.appendChild(o.cloneNode(!0)),r.appendChild(l),r.appendChild(o.cloneNode(!0));for(var p=[],h=0;h<c.length;h++)p.push([h,upgradeData[heroData[a].upgrades[h]].level]),p.sort(compareSecondColumn);for(var f=0;f<c.length;f++){var g=p[f];r.appendChild(u[g[0]]),r.appendChild(c[g[0]]),r.appendChild(o.cloneNode(!0))}var v=document.createElement("input");v.setAttribute("type","button"),v.setAttribute("value","Close and Save"),v.onclick=function(e){return function(){closePopup("Hero",e)}}(a),r.appendChild(v)}else if("Ancient"==e){r.style.display="block";var o=document.createElement("br"),b=document.createTextNode("Name: "+ancientData[a].name),t=document.createTextNode("Level: "),n=document.createElement("input");n.setAttribute("type","number"),n.setAttribute("value",ancientData[a].level),n.setAttribute("id","ancientLevelInput"),r.appendChild(b),r.appendChild(o.cloneNode(!0)),r.appendChild(t),r.appendChild(n),r.appendChild(o.cloneNode(!0));var v=document.createElement("input");v.setAttribute("type","button"),v.setAttribute("value","Close and Save"),v.onclick=function(e){return function(){closePopup("Ancient",e)}}(a),r.appendChild(v)}else if("Hero Souls"==e&&!openedHeroSoulsPopup){openedHeroSoulsPopup=!0,r.style.display="block";var o=document.createElement("br"),F=document.createTextNode("You are up the stage in this world where you can start buying enough heroes to get the desired amount of "+desiredHeroSouls+" hero souls. If you wish to continue on without ascending you can click on the Ignore button below. If you wish to change the number of hero souls you desire you can type that in the box and press close. Please note that this box will be based off your current zone so please make sure to set the current zone to what you are actually on. If you would like to go ahead with ascending then use the hero level distribution below to aid you in buying the heroes so they are the right level");r.appendChild(F),r.appendChild(o.cloneNode(!0)),r.appendChild(o.cloneNode(!0));for(var m=0;26>m;m++){var P=document.createTextNode(heroData[m].name+" Level: "+heroSoulsLevels[m]);r.appendChild(P),r.appendChild(o.cloneNode(!0))}r.appendChild(o.cloneNode(!0));var D=document.createTextNode("Desired Hero Souls: "),k=document.createElement("input");k.setAttribute("type","number"),k.setAttribute("value",desiredHeroSouls.toString()),k.setAttribute("id","popupDesiredHeroSouls"),r.appendChild(D),r.appendChild(k);var y=document.createElement("input");y.setAttribute("type","button"),y.setAttribute("value","Ignore and continue"),y.onclick=function(){closePopup("Hero Souls",2)},r.appendChild(o.cloneNode(!0)),r.appendChild(y);var v=document.createElement("input");v.setAttribute("type","button"),v.setAttribute("value","Close and Save"),v.onclick=function(){closePopup("Hero Souls",1),openedHeroSoulsPopup=!1},r.appendChild(o.cloneNode(!0)),r.appendChild(v)}}function closePopup(e,a){isPopupOpen=!1;var r=!0,o=0;if("Hero"==e){heroData[a].level=Number(document.getElementById("heroLevelInput").value),heroData[a].gilded=Number(document.getElementById("heroGildInput").value);for(var i=0;i<heroData[a].upgrades.length;i++)document.getElementById("upgradeInput"+i).checked&&heroData[a].level<upgradeData[heroData[a].upgrades[i]].level&&0==o&&(window.alert("Hero can not be level "+heroData[a].level+" if you have "+upgradeData[heroData[a].upgrades[i]].name+" which requires at least level "+upgradeData[heroData[a].upgrades[i]].level),r=!1),upgradeData[heroData[a].upgrades[i]].owned=document.getElementById("upgradeInput"+i).checked}else"Ancient"==e?0==ancientData[a].maxLevel||Number(document.getElementById("ancientLevelInput").value)<=ancientData[a].maxLevel?ancientData[a].level=Number(document.getElementById("ancientLevelInput").value):(window.alert(ancientData[a].name+"can't be higher than level "+ancientData[a].maxLevel),r=!1):"Hero Souls"==e&&(2==a&&(document.getElementById("enableHeroSouls").checked=!1,enableHeroSouls=!1),desiredHeroSouls=document.getElementById("popupDesiredHeroSouls").value,desiredHeroSouls=isNaN(desiredHeroSouls)||0>desiredHeroSouls?0:desiredHeroSouls>25?25:Number(desiredHeroSouls),document.getElementById("desiredHeroSouls").value=desiredHeroSouls);r&&(document.getElementById("popupdiv").style.display="none",recalculate(),updateDOM())}function graph(){google.load("visualization","1.0",{packages:["corechart"],callback:function(){var e=new google.visualization.arrayToDataTable([["Hero","DPS"],["Cid",heroData[0].currentClickDamage*clickSpeed],["Treebeast",heroData[1].currentDPS],["Ivan",heroData[2].currentDPS],["Brittany",heroData[3].currentDPS],["The Wandering Fisherman",heroData[4].currentDPS],["Betty",heroData[5].currentDPS],["The Masked Samurai",heroData[6].currentDPS],["Leon",heroData[7].currentDPS],["The Great Forest Seer",heroData[8].currentDPS],["Alexa",heroData[9].currentDPS],["Natalia",heroData[10].currentDPS],["Mercedes",heroData[11].currentDPS],["Bobby",heroData[12].currentDPS],["Broyle",heroData[13].currentDPS],["Sir George II",heroData[14].currentDPS],["King Midas",heroData[15].currentDPS],["Referi Jerator",heroData[16].currentDPS],["Abbadon",heroData[17].currentDPS],["Ma Zhu",heroData[18].currentDPS],["Amenhoep",heroData[19].currentDPS],["Beastlord",heroData[20].currentDPS],["Athena",heroData[21].currentDPS],["Aphrodite",heroData[22].currentDPS],["Shinatobe",heroData[23].currentDPS],["Grant",heroData[24].currentDPS],["Frostleaf",heroData[25].currentDPS]]),a={title:"Pie Chart of Hero DPS",titleTextStyle:{fontSize:15,bold:!0},backgroundColor:"#E3DAC9",chartArea:{left:20,top:50,width:"100%",height:"100%"},is3D:!0},r=new google.visualization.PieChart(document.getElementById("piechart"));
r.draw(e,a)}})}function heroGilds(e){document.getElementById(e.toString()).src=heroData[e].gilded>0?"heroSprites/heroes/"+e+"b.png":"heroSprites/heroes/"+e+".png"}function heroSpriteInfo(e){heroData[e].level>=0&&($("#"+e+" + p").remove(),document.getElementById(e.toString()).insertAdjacentHTML("afterEnd","<p id=heroLVL"+e+">Lvl:"+formatNumber(heroData[e].level))),heroData[e].gilded>=0&&($("#heroGild"+e).remove(),$("#heroLVL"+e).after("<p id=heroGild"+e+">Gild:"+formatNumber(heroData[e].gilded))),heroData[e].currentDPS>=0&&($("#heroDPS"+e).remove(),$("#heroGild"+e).after("<p id=heroDPS"+e+">DPS:"+formatNumber(heroData[e].currentDPS)))}function updateSprite(){for(i in heroData)heroGilds(i)}function updateDOM(){updateStats(),updateEfficiencyTable(),updateHeroDataOutTable(),updateAchievementInTable(),graph(),updateSprite()}function addEventListeners(){document.getElementById("updateSaveData").onclick=updateAll,document.getElementById("saveAll").onclick=saveSaveData,document.getElementById("updateValues").onclick=updateValues,document.getElementById("clearSave").onclick=function(){localStorage.removeItem("save"),updateValues()},document.getElementById("changeEfficiencyType").onclick=function(){efficiencyType=efficiencyType%4+1,updateValues()},document.getElementById("enableScientific").onclick=function(){scientificNotation=!scientificNotation,updateValues()},document.getElementById("useDarkRitual").onclick=function(){allDPSMultiplier*=1.05,updateValues()},document.getElementById("useEnergDarkRitual").onclick=function(){allDPSMultiplier*=1.1,updateValues()},window.onresize=updateDOM;for(var e=document.getElementById("heroTableIn"),a=0;a<e.rows.length;a++)for(var r=0;r<e.rows[a].cells.length;r++)e.rows[a].cells[r].onclick=function(e,a){return function(){createPopup("Hero",4*e+a)}}(a,r);for(var o=document.getElementById("ancientTableIn"),a=0;a<o.rows.length;a++)for(var r=0;r<o.rows[a].cells.length;r++)o.rows[a].cells[r].onclick=function(e,a){return function(){createPopup("Ancient",4*e+a)}}(a,r)}function postInit(){updateDOM(),addEventListeners()}var userSave=Object(),impAch=chdata.achievements,impHer=chdata.heroes,impAnc=chdata.ancients,impUpg=chdata.upgrades,achievKeys=Object.keys(impAch),heroKeys=Object.keys(impHer),ancientKeys=Object.keys(impAnc),upgradeKeys=Object.keys(impUpg),achievData=Object(),heroData=Object(),ancientData=Object(),upgradeData=Object(),efficiencyData=[],saveData="",parsedSaveData=Object(),totalDPS=0,totalGPS=0,heroDPS=0,heroSouls=0,currentZone=1,currentHighestZone=1,highestZoneReached=1,next20Purchases=[],enableClicking=!1,enableCritical=!1,clickSpeed=0,clickDamage=0,criticalClickDamage=0,criticalClickChance=0,criticalClickMultiplier=10,clickDPS=0,criticalClickDPS=0,enableHeroSouls=!1,desiredHeroSouls=0,openedHeroSoulsPopup=!1,heroSoulsLevels=[],requiredGPS=1/0,upgradeClickDPS=1,upgradeClickMultiplier=0,darkRitualsCalculated=!1,darkRitualsUsed=0,energizedDarkRitualsUsed=0,achievementMultiplier=1,darkRitualMultiplier=1,allHeroMultiplier=1,heroSoulsMultiplier=1,allDPSMultiplier=1,goldMultiplier=1,isPopupOpen=!1,sortedAchievements=[],efficiencyType=1,effMult=.005,scientificNotation=!1;preInit(),init(),postInit();